Rules of method overriding in Java

Argument list:
The argument list of overriding method (method of child class) must match the
Overridden method(the method of parent class). The data types of the arguments and their sequence
should exactly match.

Access Modifier:
of the overriding method (method of subclass) cannot be more restrictive than the overridden method
of parent class. For e.g. if the Access Modifier of parent class method is public then
the overriding method (child class method ) cannot have private, protected and default Access modifier,
because all of these three access modifiers are more restrictive than public.

For e.g. This is not allowed as child class disp method is more restrictive(protected) than base class(public)

private, static and final methods cannot be overridden as they are local to the class.
However static methods can be re-declared in the sub class, in this case the sub-class method
would act differently and will have nothing to do with the same static method of parent class.

Overriding method (method of child class) can throw unchecked exceptions, regardless of whether
the overridden method(method of parent class) throws any exception or not.
However the overriding method should not throw checked exceptions that are new or broader than
the ones declared by the overridden method.

Binding of overridden methods happen at runtime which is known as dynamic binding.

If a class is extending an abstract class or implementing an interface then it has to
override all the abstract methods unless the class itself is a abstract class
